"""
Задание 4.
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса
(метод init()), который должен принимать данные (список списков) для
формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в
виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
31 22
37 43
51 86
3 5 32
2 4 6
-1 64 -8
3 5 8 3
8 3 7 1
Следующий шаг — реализовать перегрузку метода str() для вывода матрицы в
привычном виде.
Далее реализовать перегрузку метода add() для реализации операции сложения
двух объектов класса Matrix (двух матриц). Результатом
сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент
первой строки первой матрицы складываем с первым элементом первой строки
второй матрицы и т.д.
"""


# Создаем класс Matrix
class Matrix:

    # определяем публичные атрибуты
    def __init__(self, value):
        self.value = value
        self.size = [len(value), len(value[0])]

    # создаем перегрузку __str__ в виде матрицы в привычном виде
    def __str__(self):
        return '\n'.join(['\t'.join(map(str, row)) for row in self.value])

    # создаем перегрузку __add__ как сложение двух матриц
    def __add__(self, other):
        # Проверяем, чтоб матрицы были одинакового размера
        if self.size != other.size:
            return "Ошибка сложения, матрицы разных размеров"
        # Выполняем сложение матриц
        else:
            result = []
            for item in zip(self.value, other.value):
                result.append([sum([j, k]) for j, k in zip(*item)])
            # Результат возвращаем как объект класса Matrix для удобства печати
            return Matrix(result)


# Примеры матриц и примеры сложения
mtrx01 = Matrix([[31, 22], [37, 43], [51, 86]])
print("1я матрица,\n{}".format(mtrx01))

mtrx02 = Matrix([[3, 5], [32, 2], [4, 6]])
print("2я матрица,\n{}".format(mtrx02))

mtrx03 = Matrix([[3, 5, 8], [3, 8, 3]])
print("3я матрица,\n{}".format(mtrx03))

print("\nРезультат сложения 1й и 3й матриц,\n{}".format(mtrx01 + mtrx03))

print("\nРезультат сложения 1й и 2й матриц,\n{}".format(mtrx01 + mtrx02))